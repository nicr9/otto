#! /usr/bin/env python2.7
import argparse

from otto import *
from otto.dispatcher import OttoDispatcher

def bootstrap(cmd, args, opts):
    otto = OttoDispatcher()
    if opts['list_cmds']:
        otto.list_cmds()
    elif opts['cmd_docs']:
        otto.print_docs(cmd)
    elif opts['print_version']:
        print OTTO_VERSION
    else:
        otto.handle(cmd, args)

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description=OTTO_DESC)

    parser.add_argument(
            '-l',
            action='store_true',
            help="List available commands",
            dest='list_cmds'
            )

    parser.add_argument(
            '-d',
            action='store_true',
            help="Print out the docstring for the specified command",
            dest='cmd_docs'
            )

    parser.add_argument(
            '-V',
            action='store_true',
            help="Print out version details.",
            dest='print_version'
            )

    parser.add_argument(
            action='store',
            nargs='?',
            default='',
            type=str,
            help="Workflow to run",
            metavar='command',
            dest='cmd'
            )

    parser.add_argument(
            action='store',
            nargs='*',
            type=str,
            help="Arguments for command",
            metavar='ARG',
            dest='args'
            )

    namespace = parser.parse_args()

    cmd = namespace.cmd

    args = namespace.args
    opts = {
            'list_cmds': namespace.list_cmds,
            'cmd_docs': namespace.cmd_docs,
            'print_version': namespace.print_version,
            }

    if not (cmd or any(opts.values())):
        parser.print_help()
        exit()

    bootstrap(cmd, args, opts)
